class LoginController < ApplicationController
#before_filter :authorize, :except => :login
  def add_user
    @people =Person.find(:all, :order => 'english_name')  
    if request.get?
      @user = User.new
    else
      @user = User.new(params[:user])
    end
    if @user.save
        redirect_to_index("User #{@user.name} created")
    end
  end

  def edit
    @user =User.find(params[:id])
    @user.password ="******"
    @people =Person.find(:all, :order => 'english_name')   
  end

  def update
    @user =User.find(params[:id])
    
    if @user.update_attributes(params[:user])
      flash[:notice] = 'Industry was successfully updated.'
      redirect_to :action => 'list'
    else
    @people =Person.find(:all, :order => 'english_name')       
      render :action => 'edit'
    end
  end
    
  def list
    @vals = session[:other1].split
    @user_pages, @users = paginate :users, :per_page => 50
  end

  def destroy
    User.find(params[:id]).destroy
    redirect_to :action => 'list'
  end
    
  def login
    if request.get?
      session[:user_id] = nil
      @user = User.new
    else
      @user = User.new(params[:user])
      logged_in_user = @user.try_to_login
      
      if logged_in_user
        session[:user_id] = logged_in_user.person_id  
        session[:login_user_id] = logged_in_user.id
        session[:other1] = logged_in_user.other1
        session[:supperman] = false
        
        supperuser = Person.find(logged_in_user.person_id)
        if supperuser.english_name == '--' or supperuser.english_name == 'Beranrd Zhao' or supperuser.english_name == 'Cavern Cheng'
          session[:supperman] = true
        end
                
        grade = Person.find(logged_in_user.person_id).grade
        department = Person.find(logged_in_user.person_id).department
        session[:allowed] = 'no'
        if grade =='Director' or department == 'Admin' or logged_in_user.person_id == 0
          session[:allowed] = 'yes'
        end       
        redirect_to(:action => "index")
      else
        flash[:notice] = "Invalid user/password combination"
      end
    end  
  end

  def logout
    session[:user_id] = nil
    cookies[:the_time] = ""
    flash[:notice] = "Logged out"
    redirect_to(:action => "login")  
  end
  
  def peferences
  
  end
  
  def index
    #redirect_to(:controller =>"projects",:action => "list")
    @periods = Period.find(:all, :order =>'number')
    @now_period = get_now_period
        @last_login = Dict.new
        @last_login = Dict.find(:first, :conditions =>" category ='billing_number' ")

          
        #billings number 
        today = Time.now
        if @last_login.title != today.strftime("%Y%m%d")
          @last_login.title = today.strftime("%Y%m%d")
          @last_login.code =0
          if @last_login.save
              flash[:notice] = "Today: you are the first login user"
          end
          #update_days_of_ageing
          Billing.update_all("days_of_ageing= to_days(now()) - to_days(billing_date)"," status=0 ")
        end    
  end
  
  def create_cookie
    cookies[:the_time] = params[:period]
    redirect_to :action =>"index"
  end
  
end
